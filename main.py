import telegram
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import filters, MessageHandler, ApplicationBuilder, ContextTypes, CommandHandler, Updater, \
    CallbackQueryHandler
from telegram import InlineQueryResultArticle, InputTextMessageContent
from telegram.ext import InlineQueryHandler

TOKEN = "{TOKEN}"

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # await context.bot.send_message(
    #     chat_id=update.effective_chat.id,
    #     text="I'm a bot, please talk to me!"
    # )
    # keyboard = [
    #     [
    #         InlineKeyboardButton("Option 1", callback_data='1'),
    #         InlineKeyboardButton("Option 2", callback_data='2'),
    #     ],
    #     [InlineKeyboardButton("Option 3", callback_data='3')],
    # ]

    keyboard = [
        [InlineKeyboardButton("–ü—Ä–æ—Å—Ç–æ–µü§≠", callback_data='1')],
        [InlineKeyboardButton("–°–ª–æ–∂–Ω–æ–µü•≥", callback_data='2')],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µü•≥:', reply_markup=reply_markup)


async def button(update, _):
    query = update.callback_query
    variant = query.data

    # `CallbackQueries` —Ç—Ä–µ–±—É–µ—Ç –æ—Ç–≤–µ—Ç–∞, –¥–∞–∂–µ –µ—Å–ª–∏
    # —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è, –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º
    #  —Å–ª—É—á–∞–µ —É –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –º–æ–≥—É—Ç –≤–æ–∑–Ω–∏–∫–Ω—É—Ç—å –ø—Ä–æ–±–ª–µ–º—ã.
    # —Å–º–æ—Ç—Ä–∏ https://core.telegram.org/bots/api#callbackquery.
    await query.answer()
    # —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —Ç–µ–º —Å–∞–º—ã–º –∫–Ω–æ–ø–∫–∏
    # –≤ —á–∞—Ç–µ –∑–∞–º–µ–Ω—è—Ç—Å—è –Ω–∞ —ç—Ç–æ—Ç –æ—Ç–≤–µ—Ç.
    await query.edit_message_text(text=f"–í—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç: {variant}")


async def help_command(update, _):
    await update.message.reply_text("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/wishes` –¥–ª—è –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è.")


async def unknown(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await context.bot.send_message(chat_id=update.effective_chat.id, text="–Ø –Ω–µ –∑–Ω–∞—é ¬©–ü–µ—Å–∫–æ–≤ ü§°")


if __name__ == '__main__':
    application = ApplicationBuilder().token(TOKEN).build()

    start_handler = CommandHandler('wishes', start)
    application.add_handler(start_handler)
    help_handler = CommandHandler('help', help_command)
    application.add_handler(help_handler)
    application.add_handler(CallbackQueryHandler(button))
    unknown_handler = MessageHandler(filters.COMMAND, unknown)
    application.add_handler(unknown_handler)


    # start
    application.run_polling()
